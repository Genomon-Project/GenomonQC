#! /usr/bin/python
"""

This is a template of Python main module.


"""

import sys
from datetime import datetime
import argparse
import os
import glob
import xlwt # from http://www.python-excel.org/

#
# Subroutines
#

def PrintHeader():
    now = datetime.now()

    print '#' * 84
    print '# Summary'
    print '# Generated by %(my)s' % { 'my': myself }
    print '# %(y)d.%(m)d.%(d)d.%(h)d:%(m)d' % { 'y': now.year, 'm': now.month, 'd': now.day, 'h': now.hour, 'm': now.minute }
    print '#' * 84 + ''




#
# Main
#
if __name__ == "__main__":
  
    #
    # Argument parse
    #
    argvs = sys.argv
    myself = argvs[ 0 ]
    argc = len(argvs)

    parser = argparse.ArgumentParser( description = "tsv2xl.pl" )
    parser.add_argument( '-x', '--excel_file',  help = "Excel file",    type = str )
    parser.add_argument( '-t', '--tsv_files',   help = "TSV file",      type = str )

    arg = parser.parse_args()
    if not arg.tsv_files:
        print parser.print_help();
        sys.exit( 1 )

    #
    # Print header
    #
    PrintHeader()

    wb = xlwt.Workbook()
    ws = wb.add_sheet('data')

    row = 1
    for tsvfile in glob.glob( os.path.join( arg.tsv_files ) ):
        with open(tsvfile, 'r') as f:
            for line in f:
                line = line.rstrip()
                line_split = line.split( "\t" )
                col = 0
                for val in line_split:
                    if val == 'bam_filename':
                        ws.write(0, col, 'bam_stat')
                    elif val == 'non-N_total_depth':
                        ws.write(0, col, '10000000 read sampling')
                    elif val == 'average_depth':
                        ws.write(0, col, 'Depth')
                    elif val == 'LIBRARY':
                        ws.write(0, col, 'biobambam metrics')
                    ws.write(row, col, val)
                    col += 1
                row += 1

    wb.save( arg.excel_file )

